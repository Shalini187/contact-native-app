// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Validation Check 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "top": 40,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../src/Image/image_3.jpg",
      }
    }
    style={
      Object {
        "height": 300,
        "width": 300,
      }
    }
  />
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 25,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        NUEGOV
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onChangeText={[Function]}
        placeholder="Enter your email address"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="email"
        title="Enter Email"
        underlineColorAndroid="transparent"
        value=""
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Enter your password"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="password"
        title="Enter Password"
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Forgot Password?
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(10,10,250,100)",
            "margin": 15,
            "padding": 10,
          }
        }
        testID="Pressable"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
           LOGIN 
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`renders Validation Check 2`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "top": 40,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../src/Image/image_3.jpg",
      }
    }
    style={
      Object {
        "height": 300,
        "width": 300,
      }
    }
  />
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 25,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        NUEGOV
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onChangeText={[Function]}
        placeholder="Enter your email address"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="email"
        title="Enter Email"
        underlineColorAndroid="transparent"
        value="email123@gmail.com"
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Enter your password"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="password"
        title="Enter Password"
        underlineColorAndroid="transparent"
        value="Email@123"
      />
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Forgot Password?
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(10,10,250,100)",
            "margin": 15,
            "padding": 10,
          }
        }
        testID="Pressable"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
           LOGIN 
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`renders Validation Check 3`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "top": 40,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../src/Image/image_3.jpg",
      }
    }
    style={
      Object {
        "height": 300,
        "width": 300,
      }
    }
  />
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 25,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        NUEGOV
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onChangeText={[Function]}
        placeholder="Enter your email address"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="email"
        title="Enter Email"
        underlineColorAndroid="transparent"
        value="email@123gmail.com"
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Enter your password"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="password"
        title="Enter Password"
        underlineColorAndroid="transparent"
        value="email@123"
      />
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Forgot Password?
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(10,10,250,100)",
            "margin": 15,
            "padding": 10,
          }
        }
        testID="Pressable"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
           LOGIN 
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`renders Validation Check 4`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "top": 40,
    }
  }
>
  <Image
    source={
      Object {
        "testUri": "../../../src/Image/image_3.jpg",
      }
    }
    style={
      Object {
        "height": 300,
        "width": 300,
      }
    }
  />
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 25,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        NUEGOV
      </Text>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        onChangeText={[Function]}
        placeholder="Enter your email address"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="email"
        title="Enter Email"
        underlineColorAndroid="transparent"
        value="email12gmail.com"
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Enter your password"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        returnKeyType="next"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.10)",
            "color": "black",
            "height": 50,
            "margin": 15,
            "padding": 10,
            "textAlign": "center",
            "width": 300,
          }
        }
        testID="password"
        title="Enter Password"
        underlineColorAndroid="transparent"
        value="Email@12"
      />
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Forgot Password?
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(10,10,250,100)",
            "margin": 15,
            "padding": 10,
          }
        }
        testID="Pressable"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
           LOGIN 
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
